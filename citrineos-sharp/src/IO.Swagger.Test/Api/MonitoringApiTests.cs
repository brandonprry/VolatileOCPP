/* 
 * CitrineOS Central System API
 *
 * Central System API for OCPP 2.0.1 messaging.
 *
 * OpenAPI spec version: 1.4.3
 * 
 * Generated by: https://github.com/swagger-api/swagger-codegen.git
 */
using System;
using System.IO;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Linq;
using System.Reflection;
using RestSharp;
using NUnit.Framework;

using ocpp.citrineos.Client;
using ocpp.citrineos.Api;
using ocpp.citrineos.Model;

namespace IO.Swagger.Test
{
    /// <summary>
    ///  Class for testing MonitoringApi
    /// </summary>
    /// <remarks>
    /// This file is automatically generated by Swagger Codegen.
    /// Please update the test case below to test the API endpoint.
    /// </remarks>
    [TestFixture]
    public class MonitoringApiTests
    {
        private MonitoringApi instance;

        /// <summary>
        /// Setup before each unit test
        /// </summary>
        [SetUp]
        public void Init()
        {
            instance = new MonitoringApi();
        }

        /// <summary>
        /// Clean up after each unit test
        /// </summary>
        [TearDown]
        public void Cleanup()
        {

        }

        /// <summary>
        /// Test an instance of MonitoringApi
        /// </summary>
        [Test]
        public void InstanceTest()
        {
            // TODO uncomment below to test 'IsInstanceOfType' MonitoringApi
            //Assert.IsInstanceOfType(typeof(MonitoringApi), instance, "instance is a MonitoringApi");
        }

        /// <summary>
        /// Test DataMonitoringSystemConfigGet
        /// </summary>
        [Test]
        public void DataMonitoringSystemConfigGetTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //instance.DataMonitoringSystemConfigGet();
            
        }
        /// <summary>
        /// Test DataMonitoringSystemConfigPut
        /// </summary>
        [Test]
        public void DataMonitoringSystemConfigPutTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //instance.DataMonitoringSystemConfigPut();
            
        }
        /// <summary>
        /// Test OcppMonitoringClearVariableMonitoringPost
        /// </summary>
        [Test]
        public void OcppMonitoringClearVariableMonitoringPostTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //MonitoringClearVariableMonitoringBody body = null;
            //string identifier = null;
            //string tenantId = null;
            //string callbackUrl = null;
            //instance.OcppMonitoringClearVariableMonitoringPost(body, identifier, tenantId, callbackUrl);
            
        }
        /// <summary>
        /// Test OcppMonitoringGetVariablesPost
        /// </summary>
        [Test]
        public void OcppMonitoringGetVariablesPostTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //MonitoringGetVariablesBody body = null;
            //string identifier = null;
            //string tenantId = null;
            //string callbackUrl = null;
            //instance.OcppMonitoringGetVariablesPost(body, identifier, tenantId, callbackUrl);
            
        }
        /// <summary>
        /// Test OcppMonitoringSetMonitoringBasePost
        /// </summary>
        [Test]
        public void OcppMonitoringSetMonitoringBasePostTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //MonitoringSetMonitoringBaseBody body = null;
            //string identifier = null;
            //string tenantId = null;
            //string callbackUrl = null;
            //instance.OcppMonitoringSetMonitoringBasePost(body, identifier, tenantId, callbackUrl);
            
        }
        /// <summary>
        /// Test OcppMonitoringSetMonitoringLevelPost
        /// </summary>
        [Test]
        public void OcppMonitoringSetMonitoringLevelPostTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //MonitoringSetMonitoringLevelBody body = null;
            //string identifier = null;
            //string tenantId = null;
            //string callbackUrl = null;
            //instance.OcppMonitoringSetMonitoringLevelPost(body, identifier, tenantId, callbackUrl);
            
        }
        /// <summary>
        /// Test OcppMonitoringSetVariableMonitoringPost
        /// </summary>
        [Test]
        public void OcppMonitoringSetVariableMonitoringPostTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //MonitoringSetVariableMonitoringBody body = null;
            //string identifier = null;
            //string tenantId = null;
            //string callbackUrl = null;
            //instance.OcppMonitoringSetVariableMonitoringPost(body, identifier, tenantId, callbackUrl);
            
        }
        /// <summary>
        /// Test OcppMonitoringSetVariablesPost
        /// </summary>
        [Test]
        public void OcppMonitoringSetVariablesPostTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //MonitoringSetVariablesBody body = null;
            //string identifier = null;
            //string tenantId = null;
            //string callbackUrl = null;
            //instance.OcppMonitoringSetVariablesPost(body, identifier, tenantId, callbackUrl);
            
        }
    }

}
